@using Krialys.Common.Literals
@using Krialys.Orkestra.Web.Infrastructure.Common
@*@inject IStringLocalizer<LanguageSelector> L*@

@inject IClientPreferenceManager ClientPreferenceManager;

<MudTooltip Text="@CurrentLanguageName">
    <MudMenu Icon="@Icons.Material.Outlined.Translate" Color="Color.Inherit"
             Dense="true" ActivationEvent="@MouseEvent.MouseOver">
        @foreach (var language in LocalizationConstants.SupportedLanguages)
        {
            if (language.Code == CurrentLanguage)
            {
                <MudMenuItem style="background:var(--mud-palette-primary); color:white">@language.DisplayName</MudMenuItem>
            }
            else
            {
                <MudMenuItem OnClick="(()=> ChangeLanguageAsync(language.Code))">@language.DisplayName</MudMenuItem>
            }
        }
    </MudMenu>
</MudTooltip>

@code {
    private string CurrentLanguage { get; set; } = CultureLiterals.FrenchFR;
    private string CurrentLanguageName { get; set; } = nameof(CultureLiterals.French);

    protected override async Task OnInitializedAsync()
    {
        if (await ClientPreferenceManager.GetPreference() is ClientPreference currentPreference)
        {
            CurrentLanguage = currentPreference.LanguageCode;
            CurrentLanguage = currentPreference.LanguageName;
        }
        else
        {
            CurrentLanguage = CultureLiterals.EnglishUS;
            CurrentLanguage = nameof(CultureLiterals.English);
        }
    }

    private async Task ChangeLanguageAsync(string languageCode)
    {
        await ClientPreferenceManager.ChangeLanguageAsync(languageCode);
        Navigation.NavigateTo(Navigation.Uri, forceLoad: true);
    }
}