// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Krialys.Common.Literals;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Krialys.Data.EF.Univers
{
    public partial class TRUCL_USERS_CLAIMS
    {
        [Key]
        [Display(Name = "Display_TRUCL_USERS_CLAIMS_TRUCL_USER_CLAIMID", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int TRUCL_USER_CLAIMID { get; set; }

        [StringLength(36)]
        [Display(Name = "Display_TRUCL_USERS_CLAIMS_TRU_USERID", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public string TRU_USERID { get; set; }

        [Display(Name = "Display_TRUCL_USERS_CLAIMS_TRCL_CLAIMID", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int TRCL_CLAIMID { get; set; }

        [Display(Name = "Display_TRUCL_USERS_CLAIMS_TRUCL_CLAIM_VALUE", ResourceType = typeof(Resources.DataAnnotationsResources))]
        [StringLength(32)]
        public string TRUCL_CLAIM_VALUE { get; set; }

        [Display(Name = "Display_TRUCL_USERS_CLAIMS_TRCLI_CLIENTAPPLICATIONID", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int TRCLI_CLIENTAPPLICATIONID { get; set; }

        [Required]
        [Display(Name = "Display_TRUCL_USERS_CLAIMS_TRUCL_DESCRIPTION", ResourceType = typeof(Resources.DataAnnotationsResources))]
        [StringLength(255)]
        public string TRUCL_DESCRIPTION { get; set; }


        [Required(ErrorMessage = "{0} is required. Type A for active, I for inactive")]
        [StringLength(1)]
        [Display(Name = "Display_TRUCL_USERS_CLAIMS_TRUCL_STATUS", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public string TRUCL_STATUS
        {
            get { return _statut; }
            set
            {
                _statut = string.IsNullOrWhiteSpace(value) ? string.Empty : value.Substring(0, 1).ToUpper();
                if (!_statut.ToUpper().Equals(StatusLiteral.Available) && !_statut.ToUpper().Equals(StatusLiteral.Deactivated))
                {
                    _statut = string.Empty;
                }
            }
        }
        private string _statut = string.Empty;


        [ForeignKey(nameof(TRCL_CLAIMID))]
        [InverseProperty(nameof(TRCL_CLAIMS.TRUCL_USERS_CLAIMS))]
        public virtual TRCL_CLAIMS TRCL_CLAIM { get; set; }
       
        [ForeignKey(nameof(TRU_USERID))]
        [InverseProperty(nameof(TRU_USERS.TRUCL_USERS_CLAIMS))]
        public virtual TRU_USERS TRU_USER { get; set; }


        [ForeignKey(nameof(TRCLI_CLIENTAPPLICATIONID))]
        [InverseProperty(nameof(TRCLI_CLIENTAPPLICATIONS.TRUCL_USERS_CLAIMS))]
        public virtual TRCLI_CLIENTAPPLICATIONS TRCLI_CLIENTAPPLICATION { get; set; }

    }
}