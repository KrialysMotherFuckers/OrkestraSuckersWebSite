// <auto-generated />
using Krialys.Data.EF.FileStorage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace Krialys.Entities.Migrations
{
    [DbContext(typeof(KrialysDbContext))]
    partial class DBCONTEXTModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("Krialys.Data.EF.FileStorage.TM_STF_StorageFileRequest", b =>
                {
                    b.Property<int>("stf_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("sct_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("stf_create_by")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("stf_create_date")
                        .HasColumnType("datetime");

                    b.Property<int>("stf_fk_origin_id")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("stf_is_deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("stf_stream_list")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("stf_stream_size")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("stf_stream_zipped")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<bool>("stf_to_be_deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("stf_update_by")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("stf_update_date")
                        .HasColumnType("datetime");

                    b.HasKey("stf_id");

                    b.HasIndex("sct_id");

                    b.ToTable("TM_STF_Storage_File_Request");
                });

            modelBuilder.Entity("Krialys.Data.EF.FileStorage.TR_SCT_StreamCategoryType", b =>
                {
                    b.Property<int>("sct_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("sct_active")
                        .HasColumnType("boolean");

                    b.Property<string>("sct_code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("sct_label")
                        .HasColumnType("TEXT");

                    b.HasKey("sct_id");

                    b.ToTable("TR_SCT_Stream_Category_Type");
                });

            modelBuilder.Entity("Krialys.Data.EF.FileStorage.TM_STF_StorageFileRequest", b =>
                {
                    b.HasOne("Krialys.Data.EF.FileStorage.TR_SCT_StreamCategoryType", "TR_SCT_StreamCategoryType")
                        .WithMany()
                        .HasForeignKey("sct_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TR_SCT_StreamCategoryType");
                });
#pragma warning restore 612, 618
        }
    }
}
