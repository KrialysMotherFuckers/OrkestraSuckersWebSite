// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>

using Krialys.Common.Literals;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Krialys.Data.EF.Mso
{
    public partial class TRA_ATTENDUS
    {
        public TRA_ATTENDUS()
        {
            TRAP_ATTENDUS_PLANIFS = new HashSet<TRAP_ATTENDUS_PLANIFS>();
        }

        [Key]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_ATTENDUID", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int TRA_ATTENDUID { get; set; }

        [Required(ErrorMessageResourceName = "REQUIRED", ErrorMessageResourceType = typeof(Resources.DataAnnotationsResources))]
        [StringLength(255)]
        [MinLength(3)]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_CODE", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public string TRA_CODE { get; set; }

        [Required(ErrorMessageResourceName = "REQUIRED", ErrorMessageResourceType = typeof(Resources.DataAnnotationsResources))]
        [Display(Name = "Display_TRA_ATTENDUS_TRAPL_APPLICATIONID", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int TRAPL_APPLICATIONID { get; set; }

        [Required(ErrorMessageResourceName = "REQUIRED", ErrorMessageResourceType = typeof(Resources.DataAnnotationsResources))]
        [StringLength(255)]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_DESCRIPTION", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public string TRA_DESCRIPTION { get; set; }

        [StringLength(255)]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_COMMENTAIRE", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public string TRA_COMMENTAIRE { get; set; }

        [Required(ErrorMessageResourceName = "REQUIRED", ErrorMessageResourceType = typeof(Resources.DataAnnotationsResources))]
        [Display(Name = "Display_TRA_ATTENDUS_TRR_RESULTATID", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int TRR_RESULTATID { get; set; }

        [Display(Name = "Display_TRA_ATTENDUS_TRC_CRITICITEID", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRC_CRITICITEID { get; set; }

        [StringLength(255)]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_SOURCE", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public string TRA_SOURCE { get; set; }

        [StringLength(255)]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_DESTINATION", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public string TRA_DESTINATION { get; set; }

        [Display(Name = "Display_TRA_ATTENDUS_TRNF_NATURE_ORIGINEID", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRNF_NATURE_ORIGINEID { get; set; }

        [Display(Name = "Display_TRA_ATTENDUS_TRNF_NATURE_DESTINATIONID", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRNF_NATURE_DESTINATIONID { get; set; }

        [Display(Name = "Display_TRA_ATTENDUS_TRNT_NATURE_TRAITEMENTID", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRNT_NATURE_TRAITEMENTID { get; set; }

        [Display(Name = "Display_TRA_ATTENDUS_TRTT_TECHNO_TRAITEMENTID", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRTT_TECHNO_TRAITEMENTID { get; set; }

        [Range(0, Int32.MaxValue, ErrorMessage = "Only positive number allowed")]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_NB_LIGNES_ENTREE_MIN", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRA_NB_LIGNES_ENTREE_MIN { get; set; }

        [Range(0, Int32.MaxValue, ErrorMessage = "Only positive number allowed")]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_NB_LIGNES_ENTREE_MAX", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRA_NB_LIGNES_ENTREE_MAX { get; set; }

        [Range(0, Int32.MaxValue, ErrorMessage = "Only positive number allowed")]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_NB_LIGNES_SORTIE_MIN", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRA_NB_LIGNES_SORTIE_MIN { get; set; }

        [Range(0, Int32.MaxValue, ErrorMessage = "Only positive number allowed")]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_NB_LIGNES_SORTIE_MAX", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRA_NB_LIGNES_SORTIE_MAX { get; set; }

        [Range(0, Int32.MaxValue, ErrorMessage = "Only positive number allowed")]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_TAILLE_FICHIER_ENTREE_MIN", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRA_TAILLE_FICHIER_ENTREE_MIN { get; set; }

        [Range(0, Int32.MaxValue, ErrorMessage = "Only positive number allowed")]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_TAILLE_FICHIER_ENTREE_MAX", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRA_TAILLE_FICHIER_ENTREE_MAX { get; set; }

        [Range(0, Int32.MaxValue, ErrorMessage = "Only positive number allowed")]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_TAILLE_FICHIER_SORTIE_MIN", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRA_TAILLE_FICHIER_SORTIE_MIN { get; set; }

        [Range(0, Int32.MaxValue, ErrorMessage = "Only positive number allowed")]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_TAILLE_FICHIER_SORTIE_MAX", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRA_TAILLE_FICHIER_SORTIE_MAX { get; set; }

        [Range(0, Int32.MaxValue, ErrorMessage = "Only positive number allowed")]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_DUREE_TRAITEMENT_MIN", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRA_DUREE_TRAITEMENT_MIN { get; set; }

        [Range(0, Int32.MaxValue, ErrorMessage = "Only positive number allowed")]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_DUREE_TRAITEMENT_MAX", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRA_DUREE_TRAITEMENT_MAX { get; set; }

        [Range(0, Int32.MaxValue, ErrorMessage = "Only positive number allowed")]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_FICHIER_AGE_MIN", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRA_FICHIER_AGE_MIN { get; set; }

        [Range(0, Int32.MaxValue, ErrorMessage = "Only positive number allowed")]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_FICHIER_AGE_MAX", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRA_FICHIER_AGE_MAX { get; set; }

        [StringLength(100)]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_AUTEUR", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public string TRA_AUTEUR { get; set; }

        [Required(ErrorMessage = "{0} is required.")]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_DEBUT_VALIDITE", ResourceType = typeof(Resources.DataAnnotationsResources))]
        [DataType(DataType.DateTime)]
        [DisplayFormat(DataFormatString = "g")]
        public DateTime TRA_DEBUT_VALIDITE { get; set; } = DateTime.UtcNow;

        [DataType(DataType.DateTime)]
        [DisplayFormat(DataFormatString = "g")]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_FIN_VALIDITE", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public DateTime? TRA_FIN_VALIDITE { get; set; }

        [Required(ErrorMessage = "{0} is required. Type A for active, I for inactive")]
        [StringLength(1)]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_STATUT", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public string TRA_STATUT
        {
            get { return _statut; }
            set
            {
                _statut = string.IsNullOrWhiteSpace(value) ? string.Empty : value.Substring(0, 1).ToUpper();
                if (!_statut.ToUpper().Equals(StatusLiteral.Available) && !_statut.ToUpper().Equals(StatusLiteral.Deactivated))
                {
                    _statut = string.Empty;
                }
            }
        }
        private string _statut = string.Empty;

        [Display(Name = "Display_TRA_ATTENDUS_TRC_CONTRATID", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public int? TRC_CONTRATID { get; set; }

        [StringLength(255)]
        [Display(Name = "Display_TRA_ATTENDUS_TRA_MOTCLEF", ResourceType = typeof(Resources.DataAnnotationsResources))]
        public string TRA_MOTCLEF { get; set; }

        // Foreign Keys \\

        [ForeignKey(nameof(TRAPL_APPLICATIONID))]
        [InverseProperty(nameof(TRAPL_APPLICATIONS.TRA_ATTENDUS))]
        public virtual TRAPL_APPLICATIONS TRAPL_APPLICATION { get; set; }
     
        [ForeignKey(nameof(TRC_CRITICITEID))]
        [InverseProperty(nameof(TRC_CRITICITES.TRA_ATTENDUS))]
        public virtual TRC_CRITICITES TRC_CRITICITE { get; set; }
      
        [ForeignKey(nameof(TRNF_NATURE_DESTINATIONID))]
        [InverseProperty(nameof(TRNF_NATURES_FLUX.TRA_ATTENDUSTRNF_NATURE_DESTINATION))]
        public virtual TRNF_NATURES_FLUX TRNF_NATURE_DESTINATION { get; set; }
       
        [ForeignKey(nameof(TRNF_NATURE_ORIGINEID))]
        [InverseProperty(nameof(TRNF_NATURES_FLUX.TRA_ATTENDUSTRNF_NATURE_ORIGINE))]
        public virtual TRNF_NATURES_FLUX TRNF_NATURE_ORIGINE { get; set; }
      
        [ForeignKey(nameof(TRNT_NATURE_TRAITEMENTID))]
        [InverseProperty(nameof(TRNT_NATURES_TRAITEMENTS.TRA_ATTENDUS))]
        public virtual TRNT_NATURES_TRAITEMENTS TRNT_NATURE_TRAITEMENT { get; set; }
      
        [ForeignKey(nameof(TRR_RESULTATID))]
        [InverseProperty(nameof(TRR_RESULTATS.TRA_ATTENDUS))]
        public virtual TRR_RESULTATS TRR_RESULTAT { get; set; }
       
        [ForeignKey(nameof(TRTT_TECHNO_TRAITEMENTID))]
        [InverseProperty(nameof(TRTT_TECHNOS_TRAITEMENTS.TRA_ATTENDUS))]
        public virtual TRTT_TECHNOS_TRAITEMENTS TRTT_TECHNO_TRAITEMENT { get; set; }
        [InverseProperty("TRA_ATTENDU")]
        public virtual ICollection<TRAP_ATTENDUS_PLANIFS> TRAP_ATTENDUS_PLANIFS { get; set; }
       
        [ForeignKey(nameof(TRC_CONTRATID))]
        [InverseProperty(nameof(TRC_CONTRATS.TRA_ATTENDUS))]
        public virtual TRC_CONTRATS TRC_CONTRAT { get; set; }
    }
}