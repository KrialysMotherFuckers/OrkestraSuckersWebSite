// <auto-generated />
using System;
using Krialys.Data.EF.RefManager;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Krialys.Data.EF.Migrations
{
    [DbContext(typeof(KrialysDbContext))]
    partial class KrialysDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.16");

            modelBuilder.Entity("Krialys.Data.EF.RefManager.TM_RFH_ReferentialHistorical", b =>
                {
                    b.Property<int>("Rfh_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("rfh_id");

                    b.Property<string>("Rfh_Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfh_description");

                    b.Property<string>("Rfh_ErrorMessage")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfh_error_message");

                    b.Property<string>("Rfh_LabelCode")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfh_label_code");

                    b.Property<string>("Rfh_LabelCodeGenerated")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfh_label_code_generated");

                    b.Property<string>("Rfh_ProcessStatus")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfh_process_status");

                    b.Property<string>("Rfh_ProcessType")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfh_process_type");

                    b.Property<int?>("Rfh_RequestId")
                        .HasColumnType("int")
                        .HasColumnName("rfh_request_id");

                    b.Property<string>("Rfh_StatusCode")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfh_status_code");

                    b.Property<string>("Rfh_TableFunctionalName")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfh_table_functional_name");

                    b.Property<string>("Rfh_TableName")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfh_table_name");

                    b.Property<string>("Rfh_TreatmentId")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfh_treatment_id");

                    b.Property<string>("Rfh_UpdateBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfh_update_by");

                    b.Property<DateTime?>("Rfh_UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("rfh_update_date");

                    b.Property<int>("Rfs_id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("rfs_id");

                    b.HasKey("Rfh_id");

                    b.HasIndex("Rfs_id");

                    b.ToTable("TX_RFH_ReferentialHistorical");
                });

            modelBuilder.Entity("Krialys.Data.EF.RefManager.TM_RFS_ReferentialSettings", b =>
                {
                    b.Property<int>("Rfs_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("rfs_id");

                    b.Property<int>("Cnx_Id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cnx_id");

                    b.Property<string>("Rfs_CreatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_created_by");

                    b.Property<DateTime>("Rfs_CreationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("rfs_creation_date");

                    b.Property<string>("Rfs_Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_description");

                    b.Property<string>("Rfs_Documentation")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_documentation");

                    b.Property<bool>("Rfs_IsBackupNeeded")
                        .HasColumnType("boolean")
                        .HasColumnName("rfs_is_backup_needed");

                    b.Property<bool>("Rfs_IsUpdateSentToGdb")
                        .HasColumnType("boolean")
                        .HasColumnName("rfs_is_update_sent_to_gdb");

                    b.Property<string>("Rfs_LabelCodeFieldName")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_label_code_fieldname");

                    b.Property<string>("Rfs_LabelDataClonedInProgressListJson")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_label_data_cloned_in_progress_list_json");

                    b.Property<DateTime?>("Rfs_LastRefreshDate")
                        .HasColumnType("datetime")
                        .HasColumnName("rfs_last_refresh_date");

                    b.Property<string>("Rfs_ManagerId")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_manager_id");

                    b.Property<string>("Rfs_ParamLabelObjectCode")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_param_label_object_code");

                    b.Property<int?>("Rfs_ScenarioId")
                        .HasColumnType("int")
                        .HasColumnName("rfs_scenario_id");

                    b.Property<DateTime?>("Rfs_SendDateToGdb")
                        .HasColumnType("datetime")
                        .HasColumnName("rfs_send_date_to_gdb");

                    b.Property<string>("Rfs_StatusCode")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_status_code");

                    b.Property<DateTime?>("Rfs_TableDataApprovalDate")
                        .HasColumnType("datetime")
                        .HasColumnName("rfs_table_data_approval_date");

                    b.Property<bool>("Rfs_TableDataApproved")
                        .HasColumnType("boolean")
                        .HasColumnName("rfs_table_data_approved");

                    b.Property<string>("Rfs_TableDataApprovedBy")
                        .HasColumnType("datetime")
                        .HasColumnName("rfs_table_data_approved_by");

                    b.Property<int?>("Rfs_TableDataMaxRowsExpectedToReceive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("rfs_table_data_max_rows_expected_to_receive");

                    b.Property<int?>("Rfs_TableDataMaxRowsExpectedToSend")
                        .HasColumnType("INTEGER")
                        .HasColumnName("rfs_table_data_max_rows_expected_to_send");

                    b.Property<int?>("Rfs_TableDataMinRowsExpectedToSend")
                        .HasColumnType("INTEGER")
                        .HasColumnName("rfs_table_data_min_rows_expected_to_send");

                    b.Property<bool>("Rfs_TableDataNeedToBeRefreshed")
                        .HasColumnType("boolean")
                        .HasColumnName("rfs_table_data_need_to_be_refreshed");

                    b.Property<bool>("Rfs_TableDataToApprouve")
                        .HasColumnType("boolean")
                        .HasColumnName("rfs_table_data_to_approuve");

                    b.Property<string>("Rfs_TableFunctionalName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_table_functional_name");

                    b.Property<string>("Rfs_TableName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_table_name");

                    b.Property<string>("Rfs_TableQueryCriteria")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_table_query_criteria");

                    b.Property<string>("Rfs_TableQueryDelete")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_table_query_delete");

                    b.Property<string>("Rfs_TableQueryInsert")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_table_query_insert");

                    b.Property<string>("Rfs_TableQuerySelect")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_table_query_select");

                    b.Property<string>("Rfs_TableQueryUpdate")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_table_query_update");

                    b.Property<string>("Rfs_TableQueryUpdateColumns")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_table_query_update_columns");

                    b.Property<string>("Rfs_TableQueryUpdateKeys")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_table_query_update_keys");

                    b.Property<string>("Rfs_TableSchema")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_table_schema");

                    b.Property<int>("Rfs_TableTypology")
                        .HasColumnType("int")
                        .HasColumnName("rfs_table_typology");

                    b.Property<string>("Rfs_UpdateBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfs_update_by");

                    b.Property<DateTime?>("Rfs_UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("rfs_update_date");

                    b.HasKey("Rfs_id");

                    b.HasIndex("Cnx_Id");

                    b.ToTable("TM_RFS_ReferentialSettings");
                });

            modelBuilder.Entity("Krialys.Data.EF.RefManager.TR_CNX_Connections", b =>
                {
                    b.Property<int>("Cnx_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("cnx_id");

                    b.Property<string>("Cnx_Code")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("cnx_code");

                    b.Property<DateTime>("Cnx_CreationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("cnx_creation_date");

                    b.Property<string>("Cnx_DatabaseName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("cnx_database_name");

                    b.Property<int>("Cnx_DatabaseType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cnx_database_type");

                    b.Property<bool>("Cnx_IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("cnx_is_active");

                    b.Property<string>("Cnx_Label")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("cnx_label");

                    b.Property<string>("Cnx_Login")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("cnx_login");

                    b.Property<string>("Cnx_Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("cnx_password");

                    b.Property<int>("Cnx_Port")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cnx_port");

                    b.Property<string>("Cnx_ServerName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("cnx_server_name");

                    b.HasKey("Cnx_Id");

                    b.ToTable("TR_CNX_Connections");
                });

            modelBuilder.Entity("Krialys.Data.EF.RefManager.TX_RFX_ReferentialSettingsData", b =>
                {
                    b.Property<int>("Rfx_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("rfx_id");

                    b.Property<int>("Rfs_id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("rfs_id");

                    b.Property<string>("Rfx_TableData")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfx_table_data");

                    b.Property<string>("Rfx_TableDataBackup")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfx_table_data_backup");

                    b.Property<DateTime?>("Rfx_TableDataBackupDate")
                        .HasColumnType("datetime")
                        .HasColumnName("rfx_table_data_backup_date");

                    b.Property<string>("Rfx_TableDataBackupUpdatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfx_table_data_backup_updated_by");

                    b.Property<DateTime?>("Rfx_TableDataUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("rfx_table_data_update_date");

                    b.Property<string>("Rfx_TableDataUpdatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfx_table_data_updated_by");

                    b.Property<string>("Rfx_TableMetadata")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfx_table_metadata");

                    b.Property<string>("Rfx_TableMetadataBackup")
                        .HasColumnType("TEXT")
                        .HasColumnName("rfx_table_metadata_backup");

                    b.HasKey("Rfx_id");

                    b.HasIndex("Rfs_id")
                        .IsUnique();

                    b.ToTable("TX_RFX_ReferentialSettingsData");
                });

            modelBuilder.Entity("Krialys.Data.EF.RefManager.TM_RFH_ReferentialHistorical", b =>
                {
                    b.HasOne("Krialys.Data.EF.RefManager.TM_RFS_ReferentialSettings", "TM_RFS_ReferentialSettings")
                        .WithMany()
                        .HasForeignKey("Rfs_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TM_RFS_ReferentialSettings");
                });

            modelBuilder.Entity("Krialys.Data.EF.RefManager.TM_RFS_ReferentialSettings", b =>
                {
                    b.HasOne("Krialys.Data.EF.RefManager.TR_CNX_Connections", "TR_CNX_Connections")
                        .WithMany()
                        .HasForeignKey("Cnx_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TR_CNX_Connections");
                });

            modelBuilder.Entity("Krialys.Data.EF.RefManager.TX_RFX_ReferentialSettingsData", b =>
                {
                    b.HasOne("Krialys.Data.EF.RefManager.TM_RFS_ReferentialSettings", "TM_RFS_ReferentialSettings")
                        .WithOne("TX_RFX_ReferentialSettingsData")
                        .HasForeignKey("Krialys.Data.EF.RefManager.TX_RFX_ReferentialSettingsData", "Rfs_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TM_RFS_ReferentialSettings");
                });

            modelBuilder.Entity("Krialys.Data.EF.RefManager.TM_RFS_ReferentialSettings", b =>
                {
                    b.Navigation("TX_RFX_ReferentialSettingsData");
                });
#pragma warning restore 612, 618
        }
    }
}
