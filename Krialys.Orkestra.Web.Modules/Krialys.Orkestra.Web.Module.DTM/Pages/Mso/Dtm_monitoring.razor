@page "/dtm_monitoring"

@using Krialys.Orkestra.Web.Module.Common.BusEvents;
@attribute [Authorize(Policy = PoliciesLiterals.Administrator)]

<SfTab EnablePersistence="true"
       ID=@(Litterals.Portail + "Univers_dtm_monitoring")
       LoadOn="ContentLoad.Dynamic"
       OverflowMode="OverflowMode.Popup"
       ScrollStep="150">

    <TabAnimationSettings>
        <TabAnimationPrevious Effect="AnimationEffect.None" Duration="0"></TabAnimationPrevious>
        <TabAnimationNext Effect="AnimationEffect.None" Duration="0"></TabAnimationNext>
    </TabAnimationSettings>

    <TabEvents Selecting="OnTabSelecting" />

    <TabItems>

        <TabItem Disabled=@Disabled>
			<ChildContent>
				<TabHeader Text="Définition des attendus" />
			</ChildContent>
			<ContentTemplate>
                <Mso_Expected />
			</ContentTemplate>
		</TabItem>

        <TabItem Disabled=@Disabled>
            <ChildContent>
                <TabHeader Text="Modèle des récurrences" />
            </ChildContent>
            <ContentTemplate>
                <Mso_Planning />
            </ContentTemplate>
        </TabItem>

    </TabItems>
</SfTab>

@code {
    private bool Disabled { get; set; }

    protected override void OnInitialized()
    {
        // Subscribe SfTabEvent
        Bus.Subscribe<SfTabBusEvent>(e =>
        {
            var result = e.GetMessage<SfTabBusEvent>().Disabled;
            if (Disabled != result)
            {
                Disabled = result;
                // Refresh UI
                StateHasChanged();
            }
        });
    }

    private void OnTabSelecting(SelectingEventArgs args)
    {
        // Disable Tab navigation on Tab selection.
        if (args.IsSwiped)
        {
            args.Cancel = true;
        }
        else
        {
            // Set Disabled value then fire event to SfTab
            Bus.Publish(new SfTabBusEvent { Disabled = (args.SelectingIndex != 1) });
        }
    }
}
