@using AnimationEffect = Syncfusion.Blazor.AnimationEffect
@using FilterType = Syncfusion.Blazor.DropDowns.FilterType
@using Krialys.Data.EF.Etq
@using Krialys.Data.EF.Univers;

<div class="container" style="margin:0">
    <div class="row">
        @if (!IsSortHidden)
        {
            <div class="col-2">
                @($"Tri par {(SortByNewest ? "Date" : "Nom")}")
                <MudSwitch @bind-Checked="@SortByNewest" Color="Color.Info" />
            </div>
        }

        @if (ResearchType.Contains(ETQ.ResearchType.BySimpleText))
        {
            <div class="col-2">
                <SfTextBox @bind-Value=_filters.SearchedValue
                           Placeholder=@Trad.Keys["DTS:EtiquetteSearch"]
                           FloatLabelType=FloatLabelType.Always
                           ValueChange=SearchValueChangeAsync
                           ShowClearButton=true />
            </div>
        }

        @if (ResearchType.Contains(ETQ.ResearchType.ByDate))
        {
            <div class="col-2">
                <SfDateRangePicker TValue=DateTime?
                                   Placeholder=@Trad.Keys["DTS:CreationDateFilter"]
                                   FloatLabelType=FloatLabelType.Always
                @bind-StartDate=_filters.CreationDateMin
                @bind-EndDate=_filters.CreationDateMax
                                   ShowClearButton=true
                                   StrictMode=true>
                    <DateRangePickerEvents TValue=DateTime? ValueChange=RangePickerValueChangedAsync />
                    <DateRangePickerPresets>
                        <DateRangePickerPreset Label=@Trad.Keys["DTS:ThisWeek"]
                                               Start=_weekStart End=_weekEnd />
                        <DateRangePickerPreset Label=@Trad.Keys["DTS:ThisMonth"]
                                               Start=_monthStart End=_monthEnd />
                        <DateRangePickerPreset Label=@Trad.Keys["DTS:LastMonth"]
                                               Start=_lastMonthStart End=_lastMonthEnd />
                    </DateRangePickerPresets>
                </SfDateRangePicker>
            </div>
        }

        @if (ResearchType.Contains(ETQ.ResearchType.ByDomaine))
        {
            <div class="col-2">
                <SfMultiSelect TValue=TDOM_DOMAINES[]
                               TItem=TDOM_DOMAINES
                               Query=_domainsSelectQuery
                               Value=_filters.SelectedDomains.ToArray()
                               Mode=@VisualMode.CheckBox
                               Placeholder=@Trad.Keys["DTS:DomainFilter"]
                               FloatLabelType=@FloatLabelType.Always
                               ShowClearButton=true
                               ShowDropDownIcon=true
                               AllowFiltering=true
                               CssClass="e-success"
                               FilterType=@FilterType.Contains
                               EnableVirtualization=true>
                    <SfDataManager AdaptorInstance=@typeof(IWasmDataAdaptor<TDOM_DOMAINES>)
                                   Adaptor=Adaptors.CustomAdaptor />
                    <MultiSelectFieldSettings Text=@nameof(TDOM_DOMAINES.TDOM_LIB) Value=@nameof(TDOM_DOMAINES.TDOM_DOMAINEID) />
                    <MultiSelectEvents TValue=TDOM_DOMAINES[]
                                       TItem=TDOM_DOMAINES
                                       OnValueSelect=DomainFilterOnValueSelectAsync
                                       ValueRemoved=DomainFilterValueRemovedAsync
                                       Cleared=DomainFilterClearedAsync />
                    <MultiSelectTemplates TItem=TDOM_DOMAINES>
                        <ItemTemplate>
                            @{
                                var domain = context;
                                <span title="@domain.TDOM_LIB (@domain.TDOM_CODE)">
                                    @domain.TDOM_LIB
                                </span>
                            }
                        </ItemTemplate>
                    </MultiSelectTemplates>
                </SfMultiSelect>

                @* @if (_filters.SelectedDomains is not null && _filters.SelectedDomains.Any())
            {
            <div style="display:none">
            <SfChip @ref=_domainSfChipRef
            EnableDelete=false>
            <ChipItems>
            @foreach (var domain in _filters.SelectedDomains)
            {
            var title = $"{domain.TDOM_LIB} ({domain.TDOM_CODE})";
            <ChipItem @key=domain.TDOM_DOMAINEID
            Text=@domain.TDOM_LIB
            title=@title />
            }
            </ChipItems>
            </SfChip>
            </div>
            } *@
            </div>
        }

        @if (ResearchType.Contains(ETQ.ResearchType.ByPerimeter))
        {
            <div class="col-2">
                <SfMultiSelect TValue=TPRCP_PRC_PERIMETRES[]
                               TItem=TPRCP_PRC_PERIMETRES
                               Query=_perimetersSelectQuery
                               Value=_filters.SelectedPerimeters.ToArray()
                               Mode=@VisualMode.CheckBox
                               Placeholder=@Trad.Keys["DTS:PerimeterFilter"]
                               FloatLabelType=@FloatLabelType.Always
                               ShowClearButton=true
                               ShowDropDownIcon=true
                               AllowFiltering=true
                               FilterType=@FilterType.Contains
                               EnableVirtualization=true>
                    <SfDataManager AdaptorInstance=@typeof(IWasmDataAdaptor<TPRCP_PRC_PERIMETRES>) Adaptor=Adaptors.CustomAdaptor />
                    <MultiSelectFieldSettings Text=@nameof(TPRCP_PRC_PERIMETRES.TPRCP_LIB) />
                    <MultiSelectEvents TValue=TPRCP_PRC_PERIMETRES[]
                                       TItem=TPRCP_PRC_PERIMETRES
                                       OnValueSelect=PerimeterFilterOnValueSelectAsync
                                       ValueRemoved=PerimeterFilterValueRemovedAsync
                                       Cleared=PerimeterFilterClearedAsync />
                    <MultiSelectTemplates TItem=TPRCP_PRC_PERIMETRES>
                        <ItemTemplate>
                            @{
                                var perimeter = context;
                                <span title="@perimeter.TPRCP_LIB (@perimeter.TPRCP_CODE)">
                                    @perimeter.TPRCP_LIB
                                </span>
                            }
                        </ItemTemplate>
                    </MultiSelectTemplates>
                </SfMultiSelect>

                @* @if (_filters.SelectedPerimeters is not null && _filters.SelectedPerimeters.Any())
            {
            <div style="display:none">
            <SfChip @ref=_perimeterSfChipRef
            EnableDelete=false>
            <ChipItems>
            @foreach (var perimeter in _filters.SelectedPerimeters)
            {
            var title = $"{perimeter.TPRCP_LIB} ({perimeter.TPRCP_CODE})";
            <ChipItem @key=perimeter.TPRCP_PRC_PERIMETREID
            Text=@perimeter.TPRCP_LIB
            title=@title />
            }
            </ChipItems>
            </SfChip>
            </div>
            } *@
            </div>
        }

        @if (ResearchType.Contains(ETQ.ResearchType.ByLabelOject))
        {
            <div class="col-2">
                <SfMultiSelect TValue=TOBJE_OBJET_ETIQUETTES[]
                               TItem=TOBJE_OBJET_ETIQUETTES
                               Query=_objectsSelectQuery
                               Value=_filters.SelectedObjects.ToArray()
                               Mode=@VisualMode.CheckBox
                               Placeholder=@Trad.Keys["DTS:ObjectFilter"]
                               FloatLabelType=@FloatLabelType.Always
                               ShowClearButton=true
                               ShowDropDownIcon=true
                               AllowFiltering=true
                               FilterType=@FilterType.Contains
                               EnableVirtualization=true>
                    <SfDataManager AdaptorInstance=@typeof(IWasmDataAdaptor<TOBJE_OBJET_ETIQUETTES>)
                                   Adaptor=Adaptors.CustomAdaptor />
                    <MultiSelectFieldSettings Text=@nameof(TOBJE_OBJET_ETIQUETTES.TOBJE_LIB) />
                    <MultiSelectEvents TValue=TOBJE_OBJET_ETIQUETTES[]
                                       TItem=TOBJE_OBJET_ETIQUETTES
                                       OnValueSelect=ObjectFilterOnValueSelectAsync
                                       ValueRemoved=ObjectFilterValueRemovedAsync
                                       Cleared=ObjectFilterClearedAsync />
                    <MultiSelectTemplates TItem=TOBJE_OBJET_ETIQUETTES>
                        <ItemTemplate>
                            @{
                                var objectEtq = context;
                                <span title="@objectEtq.TOBJE_LIB (@objectEtq.TOBJE_CODE)">
                                    @objectEtq.TOBJE_LIB
                                </span>
                            }
                        </ItemTemplate>
                    </MultiSelectTemplates>
                </SfMultiSelect>

                @* @if (_filters.SelectedObjects is not null && _filters.SelectedObjects.Any())
            {
            <div style="display:none">
            <SfChip @ref=_objectSfChipRef
            EnableDelete=false>
            <ChipItems>
            @foreach (var objectEtq in _filters.SelectedObjects)
            {
            var title = $"{objectEtq.TOBJE_LIB} ({objectEtq.TOBJE_CODE})";
            <ChipItem @key=objectEtq.TOBJE_OBJET_ETIQUETTEID
            Text=@objectEtq.TOBJE_LIB
            title=@title />
            }
            </ChipItems>
            </SfChip>
            </div>
            } *@
            </div>
        }

        @if (ResearchType.Contains(ETQ.ResearchType.ByScenario))
        {
            <div class="col-2">
                <SfMultiSelect TValue=TS_SCENARIOS[]
                               TItem=TS_SCENARIOS
                               Query=_moduleQuery
                               Mode=VisualMode.CheckBox
                               EnableGroupCheckBox=true
                               Placeholder=@Trad.Keys["ETQ:ByModule"]
                               FloatLabelType=FloatLabelType.Always
                               AllowFiltering=true
                               FilterBarPlaceholder=@Trad.Keys["COMMON:Search"]
                               EnableVirtualization=true
                               ItemsCount=20
                               ShowClearButton=true
                               ShowDropDownIcon=true>
                    <SfDataManager AdaptorInstance=@typeof(IWasmDataAdaptor<TS_SCENARIOS>)
                                   Adaptor=Adaptors.CustomAdaptor />
                    <MultiSelectFieldSettings Text=@nameof(TS_SCENARIOS.TS_NOM_SCENARIO)
                                              GroupBy=@($"{nameof(TS_SCENARIOS.TE_ETAT)}.{nameof(TE_ETATS.TE_FULLNAME)}") />
                    <MultiSelectEvents TValue=TS_SCENARIOS[]
                                       TItem=TS_SCENARIOS
                                       ValueChange=ModuleChangeAsync />
                </SfMultiSelect>

                @* @if (_selectedModules is not null && _selectedModules.Any())
            {
            <div class="e-chip-list">
            <div class="e-chip-set">
            @foreach (var module in _selectedModules)
            {
            <div class="e-chip"
            title=@($"{module.TS_NOM_SCENARIO} ({module.TE_ETAT.TE_FULLNAME})")>
            <span class="e-chip-text">
            @(module.TS_NOM_SCENARIO)
            </span>
            </div>
            }
            </div>
            </div>
            } *@
            </div>
        }

        @if (ResearchType.Contains(ETQ.ResearchType.ByOrderNumber))
        {
            <div class="col-2">
                <SfNumericTextBox @bind-Value=_filters.OrderNumber
                                  TValue=int?
                                  Placeholder=@Trad.Keys["ETQ:ByOrderNumber"]
                                  FloatLabelType=FloatLabelType.Always
                                  ShowSpinButton=false
                                  ShowClearButton=true>
                    <NumericTextBoxEvents TValue=int?
                                          ValueChange=@(() => UpdateEtqFilteringAsync()) />
                </SfNumericTextBox>
            </div>
        }

        @if (ResearchType.Contains(ETQ.ResearchType.ByRules))
        {
            <div class="col-2">
                <SfMultiSelect @bind-Value=_filters._selectedRuleValues
                               TValue=TRGLRV_REGLES_VALEURS[]
                               TItem=TRGLRV_REGLES_VALEURS
                               Query=_ruleValueQuery
                               Mode=VisualMode.CheckBox
                               EnableGroupCheckBox=true
                               Placeholder=@Trad.Keys["ETQ:ByRuleValue"]
                               FloatLabelType=FloatLabelType.Always
                               AllowFiltering=true
                               FilterBarPlaceholder=@Trad.Keys["COMMON:Search"]
                               EnableVirtualization=true
                               ItemsCount=20
                               ShowClearButton=true
                               ShowDropDownIcon=true>
                    <SfDataManager AdaptorInstance=@typeof(IWasmDataAdaptor<TRGLRV_REGLES_VALEURS>)
                                   Adaptor=Adaptors.CustomAdaptor />
                    <MultiSelectFieldSettings Text=@nameof(TRGLRV_REGLES_VALEURS.TRGLRV_VALEUR)
                                              GroupBy=@($"{nameof(TRGLRV_REGLES_VALEURS.TRGL_REGLE)}.{nameof(TRGL_REGLES.TRGL_LIB_REGLE)}") />
                    <MultiSelectEvents TValue=TRGLRV_REGLES_VALEURS[]
                                       TItem=TRGLRV_REGLES_VALEURS
                                       ValueChange=@(() => UpdateEtqFilteringAsync()) />
                </SfMultiSelect>

                @* @if (_selectedRuleValues is not null && _selectedRuleValues.Any())
            {
            <div class="e-chip-list">
            <div class="e-chip-set">
            @foreach (var ruleValue in _selectedRuleValues)
            {
            <div class="e-chip"
            title=@($"{ruleValue.TRGLRV_VALEUR} ({ruleValue.TRGL_REGLE.TRGL_LIB_REGLE})")>
            <span class="e-chip-text">
            @(ruleValue.TRGLRV_VALEUR)
            </span>
            </div>
            }
            </div>
            </div>
            } *@
            </div>
        }

        @if (ResearchType.Contains(ETQ.ResearchType.ByActions))
        {
            <div class="col-2">
                <SfDropDownList @bind-Value=_filters.ActionLabel
                                TItem=TACT_ACTIONS
                                TValue=string
                                Query=_actionDropDownQuery
                                Placeholder=@Trad.Keys["ETQ:ByAction"]
                                FloatLabelType=FloatLabelType.Always
                                ShowClearButton=true>
                    <SfDataManager AdaptorInstance=@typeof(IWasmDataAdaptor<TACT_ACTIONS>)
                                   Adaptor=Adaptors.CustomAdaptor />
                    <DropDownListFieldSettings Value=@nameof(TACT_ACTIONS.TACT_LIB) />
                    <DropDownListEvents TItem=TACT_ACTIONS
                                        TValue=string
                                        ValueChange=@(() => UpdateEtqFilteringAsync()) />
                </SfDropDownList>
            </div>
        }

    </div>
</div>

<style scoped>

    .e-multiselect .e-multi-select-wrapper .e-chips .e-chipcontent {
        font-family: cursive;
        font-size: 20px;
        -webkit-text-fill-color: blue;
    }

    .e-multi-select-wrapper .e-chips {
        background-color: aqua;
        height: 26px;
    }

</style>
