@*@page "/mso_rapprochements_calendrier"*@

@attribute [Authorize(Policy = PoliciesLiterals.RapprochementsViewer)]

@*<h4><b>@Translation.Keys["MSO:RapprochementsTitle"]</b> - @Translation.Keys["MSO:RapprochementsText1"]</h4>*@

<div class="row no-gutters full-height">
    <div class="col-4">
        <SfMultiSelect TValue="TRA_ATTENDUS[]"
                       TItem="TRA_ATTENDUS"
                       @ref="MultiselectRef"
                       ID=@(Litterals.Portail + "MSO_RapprochementsMultiSelect")
                       PopupHeight="350px"
                       Mode="@VisualMode.CheckBox"
                       Placeholder=@Trad.Keys["MSO:RapprochementsSelectCode"]
                       AllowFiltering="true"
                       FilterBarPlaceholder=@Trad.Keys["MSO:RapprochementsSearch"]
                       ShowSelectAll="true"
                       EnableSelectionOrder="true"
                       ShowDropDownIcon="true"
                       EnablePersistence="false"
                       Query="ApplicationSelectQuery">

            <MultiSelectFieldSettings GroupBy="TRAPL_APPLICATION.TRAPL_LIB"
                                      Text="TRA_CODE">
            </MultiSelectFieldSettings>

            <MultiSelectEvents TValue="TRA_ATTENDUS[]"
                               TItem="TRA_ATTENDUS"
                               ValueChange="OnApplicationChange"
                               Cleared="OnApplicationCleared">
            </MultiSelectEvents>

            <SfDataManager AdaptorInstance=@typeof(IWasmDataAdaptor<TRA_ATTENDUS>) Adaptor=Adaptors.CustomAdaptor />
        </SfMultiSelect>
    </div>
    <div class="col-12">
        <SfSchedule TValue="AppointmentServices.Appointment"
                    Height="580px"
                    @ref="ScheduleRef"
                    FirstDayOfWeek="1"
                    ID="icalPortail_RAPPROCHEMENTS"
                    ShowHeaderBar="true"
                    ShowTimeIndicator="true"
                    EnablePersistence="true"
                    AllowDragAndDrop="false"
                    AllowResizing="false">

            <ScheduleEvents TValue="AppointmentServices.Appointment"
                            OnActionFailure="OnActionFailure"
                            OnEventDoubleClick="OnEventDoubleClick">
            </ScheduleEvents>

            <ScheduleViews>
                <ScheduleView Option="View.Day" ShowWeekNumber="true" ShowWeekend="true"></ScheduleView>
                <ScheduleView Option="View.Week" ShowWeekNumber="true" ShowWeekend="true"></ScheduleView>
                <ScheduleView Option="View.Month" ShowWeekNumber="true" ShowWeekend="true"></ScheduleView>
            </ScheduleViews>

            <ScheduleEventSettings TValue="AppointmentServices.Appointment"
                                   AllowAdding="false"
                                   AllowEditing="false"
                                   AllowDeleting="false">

                <SfDataManager AdaptorInstance="@typeof(IRapprochementsSchedulerServices)"
                               Adaptor="Adaptors.CustomAdaptor">
                </SfDataManager>

            </ScheduleEventSettings>

            <ScheduleGroup ByDate="true" Resources="@Resources"></ScheduleGroup>

            <ScheduleResources>
                <ScheduleResource TItem="AppointmentServices.Ressource" TValue="int" DataSource="@Results" Field="ResultId"
                                  Title="Result" Name="Results" TextField="ResultText" IdField="Id"
                                  ColorField="ResultColor" AllowMultiple="false"></ScheduleResource>

                <ScheduleResource TItem="AppointmentServices.Ressource" TValue="int" DataSource="@Entities" Field="EntityId"
                                  Title="Entity" Name="Entities" TextField="EntityText" IdField="Id"
                                  ColorField="EntityColor" GroupIDField="EntityGroupId" AllowMultiple="true"></ScheduleResource>
            </ScheduleResources>

            <ScheduleQuickInfoTemplates>
                <HeaderTemplate>
                    @{
                        var appointment = context as AppointmentServices.Appointment;
                        <div class="quick-info-header">
                            <div class="text-align-right">
                                <SfButton title="Fermer" class="e-control e-btn e-lib e-more-event-close e-flat e-round e-small e-icon-btn"
                                      OnClick="@(() => ScheduleRef.CloseQuickInfoPopupAsync())">
                                    <span class="e-icons e-close-icon e-btn-icon"></span>
                                </SfButton>
                            </div>
                            <div class="quick-info-header-content" style="@(GetSchedulerHeaderStyles(appointment))">
                                <div class="quick-info-title">
                                    @(appointment?.Subject)
                                </div>
                                <div class="duration-text">@(GetDurationText(appointment))</div>
                            </div>
                        </div>
                    }
                </HeaderTemplate>
                <ContentTemplate>
                    @{
                        var appointment = context as AppointmentServices.Appointment;

                        <div class="event-content">
                            @if (appointment?.Attendu is not null)
                            {
                                <div class="event-content-wrap">
                                    <label>@Trad.Keys["MSO:RapprochementsDescription"]</label>
                                    <span>@(appointment.Attendu.TRA_DESCRIPTION)</span>
                                </div>
                            }
                            else if (appointment?.Log is not null)
                            {
                                <div class="event-content-wrap">
                                    <label>@Trad.Keys["MSO:RapprochementsResult"]</label>
                                    <span>@(appointment.Log.TTL_RESULTAT)</span>
                                </div>
                            }
                        </div>
                    }
                </ContentTemplate>
            </ScheduleQuickInfoTemplates>

        </SfSchedule>
    </div>
</div>

@if (SelectedAppointmentDico is not null)
{
    <SfDialog Target="#target" Width="640" MinHeight="736" ShowCloseIcon=true
          EnableResize=false CloseOnEscape=true AllowDragging=false
          @bind-Visible="IsDialogVisible" IsModal="true">
        <DialogTemplates>
            <Header>
                @SelectedAppointmentDico.FirstOrDefault(a => a.Key == "Sujet").Value
            </Header>

            <Content>
                <p></p>
                <div class="row">
                    <div class="col-12">
                        <table class="table table-striped table-hover table-bordered">
                            <tbody>
                                @foreach (var appointment in SelectedAppointmentDico.Where(a => a.Value is not null))
                                {
                                    <tr>
                                        <th scope="row">@appointment.Key</th>
                                        <td>@appointment.Value</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </Content>
        </DialogTemplates>
        <DialogButtons>
            <DialogButton Content="Fermer" OnClick="@CloseDialog" />
        </DialogButtons>
    </SfDialog>
}
